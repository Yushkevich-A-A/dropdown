{"version":3,"sources":["components/Dropdown/Button/Button.js","components/Dropdown/DropdownList/DropdownItem/DropdownItem.js","components/Dropdown/DropdownList/DropdownList.js","components/Dropdown/Dropdown.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","onSwitch","className","onClick","DropdownItem","item","selected","onSelect","href","DropdownList","list","useState","setSelected","event","currentTarget","innerText","map","v4","Dropdown","status","setStatus","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAkBeA,MAff,SAAgBC,GAAQ,IACZC,EAAaD,EAAbC,SAER,OACI,yBAAQC,UAAU,MAAMC,QAASF,EAAjC,4BAEI,sBAAMC,UAAU,iBAAhB,wB,OCSGE,MAff,SAAsBJ,GAAQ,IAClBK,EAA4BL,EAA5BK,KAAMC,EAAsBN,EAAtBM,SAAUC,EAAYP,EAAZO,SACxB,OACI,oBAAIL,UAAWG,IAASC,EAAW,SAAW,KAAMH,QAASI,EAA7D,SACI,mBAAGC,KAAK,KAAR,SAAcH,OCwBXI,MA1Bf,SAAsBT,GAAQ,IAClBU,EAASV,EAATU,KADiB,EAGOC,mBAASD,EAAK,IAHrB,mBAGnBJ,EAHmB,KAGTM,EAHS,KAKnBL,EAAW,SAACM,GACdD,EAAYC,EAAMC,cAAcC,YAGpC,OACI,qBAAIb,UAAU,WAAd,cAEQQ,EAAKM,KAAK,SAAAX,GAAI,OAAI,cAAC,EAAD,CAEdA,KAAMA,EACNC,SAAUA,EACVC,SAAUA,GAHLU,uBCUVC,MAxBf,WAEI,IAFgB,EAUYP,mBAAS,MAVrB,mBAUVQ,EAVU,KAUFC,EAVE,KAgBhB,OACI,sBAAKlB,UAAS,2BAAsBiB,GAApC,UACI,cAAC,EAAD,CAAQlB,SANC,WACbmB,GAAU,SAAAf,GAAI,MAAc,SAATA,EAAmB,KAAO,aAMzC,cAAC,EAAD,CAAcK,KAjBT,CACT,sBACA,kBACA,aACA,OACA,iBCAOW,MARf,WACE,OACE,qBAAKnB,UAAU,YAAf,SACE,cAAC,EAAD,OCMSoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f12e084f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button(props) {\r\n    const { onSwitch } = props;\r\n\r\n    return (\r\n        <button className='btn' onClick={onSwitch}>\r\n            Account Setting\r\n            <span className='material-icons'>public</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    onSwitch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction DropdownItem(props) {\r\n    const { item, selected, onSelect} = props;\r\n    return (\r\n        <li className={item === selected ? 'active' : null} onClick={onSelect}>\r\n            <a href=\"#/\">{item}</a>\r\n        </li>\r\n    )\r\n}\r\n\r\nDropdownItem.propTypes = {\r\n    item: PropTypes.string.isRequired,\r\n    selected: PropTypes.string.isRequired,\r\n    onSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default DropdownItem;\r\n\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 } from 'uuid';\r\nimport DropdownItem from './DropdownItem/DropdownItem';\r\n\r\nfunction DropdownList(props) {\r\n    const { list } = props;\r\n\r\n    let [ selected, setSelected ] = useState(list[0]);\r\n\r\n    const onSelect = (event) => {\r\n        setSelected(event.currentTarget.innerText)\r\n    }\r\n\r\n    return (\r\n        <ul className='dropdown'>;\r\n            {\r\n                list.map( item => <DropdownItem \r\n                    key={v4()} \r\n                    item={item} \r\n                    selected={selected} \r\n                    onSelect={onSelect}/>)\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nDropdownList.propTypes = {\r\n    list: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default DropdownList;\r\n\r\n","import React, { useState } from 'react';\r\nimport Button from './Button/Button';\r\nimport DropdownList from './DropdownList/DropdownList';\r\n\r\nfunction Dropdown() {\r\n\r\n    const list = [\r\n        'Profile Information',\r\n        'Change Password', \r\n        'Become PRO', \r\n        'Help', \r\n        'Log Out'\r\n    ];\r\n\r\n    let [ status, setStatus ] = useState(null);\r\n\r\n    const onSwitch = () => {\r\n        setStatus(item => (item === 'open') ? null : 'open');\r\n    }\r\n\r\n    return (\r\n        <div className={`dropdown-wrapper ${status}`}>\r\n            <Button onSwitch={onSwitch}/>\r\n            <DropdownList list={list}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown;\r\n\r\n\r\n","import './App.css';\nimport Dropdown from './components/Dropdown/Dropdown';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Dropdown />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}